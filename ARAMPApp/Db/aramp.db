#---------------------------------------------------------------------
# Title      : AR Amplifier Epics Records Database File
# Project    :
#---------------------------------------------------------------------
# File       : aramp.proto
# Author     : Henrique Aires Silva
# Company    : Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
# Created    : 2017-08-28
# Last update: 2017-08-28
# Platform   :
# Standard   : Python 3.4
#---------------------------------------------------------------------
# Description:
#
# Defines the records used to control the device via StreamDevice in EPICS
#
#---------------------------------------------------------------------
# Copyright (c) 2017 Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program. If not, see
# <http://www.gnu.org/licenses/>.
#---------------------------------------------------------------------
# Revisions  :
# Date        Version  Author          Description
# 2017-aug-28 1.0      henrique-silva  Created
#---------------------------------------------------------------------

######################################################################
# Reset to default state

record(bo, "$(P)$(R)Rst-Cmd") {
  field(DESC, "Reset to default state")
  field(DTYP, "stream")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "1")
  field(OUT, "@aramp.proto reset $(PORT)")
}

######################################################################
# Power status control (On/Off)

record(bo, "$(P)$(R)Pwr-SP") {
  field(DESC, "Power Control (On/Off)")
  field(DTYP, "stream")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(OUT, "@aramp.proto setOnOff $(PORT)")
}

######################################################################
# Gain control
record(ao, "$(P)$(R)Gain-SP") {
  field(DESC, "Gain Control [28-53.5 dB]")
  field(DTYP, "Soft Channel")
  #field(DRVH, "53.5")
  #field(DRVL, "28.0")
  field(EGU, "dB")
  field(FLNK, "$(P)$(R)iConvGainStep")
}

######################################################################
# Gain control
record(calc, "$(P)$(R)iConvGainStep") {
  field(DESC, "Convert Gain value to steps")
  field(INPA, "$(P)$(R)Gain-SP.VAL")
  field(INPB, "-4433000")
  field(INPC, "4299")
  field(INPD, "-60.799")
  field(INPE, "0.0496")
  field(CALC, "FLOOR(B + (C - B)/(1+10^((D-A)*E)))")
  field(FLNK, "$(P)$(R)GainStep-SP")
}

######################################################################
# Gain control
record(ao, "$(P)$(R)GainStep-SP") {
  field(DESC, "Gain Control in Steps [0-4095]")
  field(DTYP, "stream")
  field(OMSL, "closed_loop")
  field(DOL, "$(P)$(R)iConvGainStep.VAL PP")
  field(DRVH, "4095")
  field(DRVL, "0")
  field(EGU, "step")
  field(OUT, "@aramp.proto setGain $(PORT)")
}
