#---------------------------------------------------------------------
# Title      : AR Amplifier Epics Records Database File
# Project    :
#---------------------------------------------------------------------
# File       : aramp.proto
# Author     : Henrique Aires Silva
# Company    : Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
# Created    : 2017-08-28
# Last update: 2017-08-28
# Platform   :
# Standard   : Python 3.4
#---------------------------------------------------------------------
# Description:
#
# Defines the records used to control the device via StreamDevice in EPICS
#
#---------------------------------------------------------------------
# Copyright (c) 2017 Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program. If not, see
# <http://www.gnu.org/licenses/>.
#---------------------------------------------------------------------
# Revisions  :
# Date        Version  Author          Description
# 2017-aug-28 1.0      henrique-silva  Created
#---------------------------------------------------------------------

######################################################################
# Reset to default state

record(bo, "$(P)$(R)Rst-Cmd") {
  field(DESC, "Reset any faults")
  field(DTYP, "Soft Channel")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(HIGH, "0.5")
  field(FLNK, "$(P)$(R)ValidRst")
}

record(calcout, "$(P)$(R)ValidRst"){
  field(DESC, "Validate reset cmd")
  field(INPA, "$(P)$(R)Rst-Cmd")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(OUT, "@aramp.proto reset $(PORT)")
}


######################################################################
# Power status control (On/Off)
######################################################################

record(bo, "$(P)$(R)Enbl-Sel") {
  field(DESC, "Power Control (On/Off)")
  field(DTYP, "stream")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(OUT, "@aramp.proto setOnOff $(PORT)")
  field(FLNK, "$(P)$(R)Enbl-Sts")
}

record(bi, "$(P)$(R)Enbl-Sts") {
  field(DESC, "Power Control (On/Off)")
  field(DTYP, "Soft Channel")
  field(INP, "$(P)$(R)Enbl-Sel.VAL")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

######################################################################
# Gain control
######################################################################

record(ao, "$(P)$(R)Gain-SP") {
  field(DESC, "Set Gain Control")
  field(DTYP, "Soft Channel")
  field(EGU, "dB")
  field(PREC, "2")
  field(DRVL, "24.42")
  field(DRVH, "51.0")
  field(HIGH, "50.5")
  field(HSV,  "MINOR")
  field(PINI, "YES")
}

record(calc, "$(P)$(R)GainRB-Calc") {
  field(DESC, "Get Gain calculation readback")
  field(INPA, "$(P)$(R)GainStep-RB CPP MSS")
  field(INPB, "0.000000000000166095783")
  field(INPC, "-0.000000000744183979")
  field(INPD, "0.00000162985630")
  field(INPE, "0.000959256803")
  field(INPF, "24.4196893")
  field(INPG, "4")
  field(INPH, "3")
  field(INPI, "2")
  field(CALC, "FLOOR(B*A^G+C*A^H+D*A^I+E*A+F)")
}

record(ai, "$(P)$(R)Gain-RB") {
  field(DESC, "Get Gain Control")
  field(INP,  "$(P)$(R)GainRB-Calc CPP MSS")
  field(EGU,  "dB")
  field(PREC, "2")
}

######################################################################
# Gain control
######################################################################

record(bo, "$(P)$(R)GainAuto-Sel"){
  field(DESC, "Enable automatic gain")
  field(PINI, "YES")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(FLNK, "$(P)$(R)GainAuto-Sts")
}

record(bi, "$(P)$(R)GainAuto-Sts"){
  field(DESC, "Get automatic gain status")
  field(INP,  "$(P)$(R)GainAuto-Sel")
  field(ZNAM, "0")
  field(ONAM, "1")
}

# For use with seq record below
# 5=(STR1 and STR3) or 10=(STR2 and STR4)
record(calc, "$(P)$(R)GainAutoIdxCalc"){
    field(DESC, "Get gain auto propagation index")
    field(SCAN, "Passive")
    field(INPA, "$(P)$(R)GainAuto-Sts.VAL CPP NMS")
    field(CALC, "A=0?5:10")
}

record(sseq, "$(P)$(R)GainAutoPropSseq"){
    field(DESC, "get all types of ao OMSL")
    field(PINI, "YES")
    field(STR1, "supervisory")
    field(STR2, "closed_loop")
    field(STR3, "0")
    field(STR4, "$(P)$(R)GToStep-Calc CPP MSS")
    field(LNK1, "$(P)$(R)GainStep-SP.OMSL NPP NMS")
    field(LNK2, "$(P)$(R)GainStep-SP.OMSL NPP NMS")
    field(LNK3, "$(P)$(R)GainStep-SP.DOL CA NMS")
    field(LNK4, "$(P)$(R)GainStep-SP.DOL CA NMS")
    field(SELL, "$(P)$(R)GainAutoIdxCalc CPP MS")
    field(SELM, "Mask")
    field(SELN, "1")
    field(FLNK, "$(P)$(R)GainAutoFilter-SP")
}

# Checks if we need to Process Gain after setting
# GainAuto to 1. This synchornizes the "Span" value
# to the Gain even if the "Span" value didn't
# change
record(calcout, "$(P)$(R)GainAutoFilter-SP"){
    field(DESC, "Set FLNK to records")
    field(INPA, "$(P)$(R)GainAuto-Sts NPP NMS")
    field(CALC, "A>0")
    field(OOPT, "When Non-zero")
    field(OUT, "$(P)$(R)GainAutoFout.PROC PP")
}

record(fanout, "$(P)$(R)GainAutoFout"){
    field(DESC, "Fanout center freq auto FLNK")
    field(SELM, "All")
    field(LNK1, "$(P)$(R)Gain-SP")
}

record(calc, "$(P)$(R)GToStep-Calc") {
  field(DESC, "Convert Gain value from dB to steps")
  field(INPA, "$(P)$(R)Gain-SP.VAL CPP MSS")
  field(INPB, "-0.0146893568")
  field(INPC, "2.55687143")
  field(INPD, "-167.98217")
  field(INPE, "5001.69010")
  field(INPF, "-53895.9082")
  field(INPG, "4")
  field(INPH, "3")
  field(INPI, "2")
  field(CALC, "FLOOR(B*A^G+C*A^H+D*A^I+E*A+F)")
}

######################################################################
# Gain control
######################################################################

record(ao, "$(P)$(R)GainStep-SP") {
  field(DESC, "Gain Control in Steps [0-4095]")
  field(DTYP, "stream")
  field(DOL,  "$(P)$(R)GToStep-Calc CPP MSS")
  field(OMSL, "closed_loop")
  field(DRVH, "4095")
  field(DRVL, "0")
  field(HIGH, "4085")
  field(HSV,  "MINOR")
  field(EGU, "step")
  field(OUT, "@aramp.proto setGain $(PORT)")
  field(FLNK, "$(P)$(R)GainStep-RB")
}

record(ai, "$(P)$(R)GainStep-RB") {
  field(DESC, "Gain Control in Steps [0-4095]")
  field(SCAN, "Passive")
  field(HIGH, "4085")
  field(HSV,  "MINOR")
  field(INP, "$(P)$(R)GainStep-SP NPP MSS")
  field(EGU, "step")
}
